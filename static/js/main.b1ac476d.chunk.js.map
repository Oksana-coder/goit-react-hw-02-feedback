{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","components/Container/Container.js","App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","className","map","option","type","onClick","protoTypes","PropTypes","string","isRequired","func","Statistics","good","neutral","bad","total","positivePercentage","protoType","number","Section","title","children","node","Notification","message","Container","App","state","handleFeedback","label","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","totalFeedback","Math","round","Object","keys","this","goodFeedback","neutralFeedback","badFeedback","positiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sVAIMA,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACpB,qBAAKC,UAAU,mBAAf,SACKF,EAAQG,KAAK,SAAAC,GAAM,OAClB,wBACEC,KAAK,SACLH,UAAU,sBAEVI,QAAS,kBAAML,EAAgBG,IAJjC,SAKEA,GAFKA,SAOjBL,EAAgBQ,WAAa,CAC3BH,OAAQI,IAAUC,OAAOC,WACzBT,gBAAiBO,IAAUG,KAAKD,YAGnBX,QCnBTa,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,SAI5BL,EAAWM,UAAY,CACrBL,KAAML,IAAUW,OAAOT,WACvBI,QAASN,IAAUW,OAAOT,WAC1BK,IAAKP,IAAUW,OAAOT,WACtBM,MAAOR,IAAUG,KAAKD,WACtBO,mBAAoBT,IAAUC,OAAOC,YAGxBE,QClBTQ,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,qCACA,6BAAKD,IACAC,MAIPF,EAAQb,WAAa,CACnBc,MAAOb,IAAUC,OAAOC,WACxBY,SAAUd,IAAUe,KAAKb,YAGZU,QCZTI,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,4BAAIA,KAGND,EAAaN,UAAY,CACvBO,QAASjB,IAAUC,OAAOC,YAGbc,QCNAE,G,MAFG,SAAC,GAAD,IAAGJ,EAAH,EAAGA,SAAH,OAAkB,qBAAKpB,UAAU,YAAf,SAA4BoB,MC2DjDK,G,kNArDbC,MAAQ,CACNf,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPc,eAAiB,SAAAC,GACf,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAQE,EAAUF,GAAS,O,EAIhCG,mBAAqB,WACnB,OAAO,EAAKL,MAAMf,KAAO,EAAKe,MAAMd,QAAU,EAAKc,MAAMb,K,EAG3DmB,gCAAkC,WAChC,IAAMC,EAAgB,EAAKF,qBAC3B,OAAOG,KAAKC,MAAM,EAAKT,MAAMf,KAAKsB,EAAgB,M,4CAGpD,WACE,IAAMnC,EAAUsC,OAAOC,KAAKC,KAAKZ,OAC3Ba,EAAeD,KAAKZ,MAAMf,KAC1B6B,EAAkBF,KAAKZ,MAAMd,QAC7B6B,EAAcH,KAAKZ,MAAMb,IACzBoB,EAAgBK,KAAKP,qBACrBW,EAA6BJ,KAAKN,kCAExC,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASb,MAAM,wBAAf,SACE,cAAC,EAAD,CACErB,QAASA,EACTC,gBAAiBuC,KAAKX,mBAG1B,cAAC,EAAD,CAASR,MAAM,aAAf,SACGc,GAAiB,EAChB,cAAC,EAAD,CACEtB,KAAM4B,EACN3B,QAAS4B,EACT3B,IAAK4B,EACL3B,MAAOmB,EACPlB,mBAAqC,IAAjBwB,EAAqB,KAArB,UAA+BG,EAA/B,OAEtB,cAAC,EAAD,CAAcnB,QAAQ,+B,GA/ChBoB,c,MCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b1ac476d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './FeedbackOptions.scss';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n    <div className=\"feedback-options\">\n        {options.map( option => (\n          <button\n            type=\"button\"\n            className=\"feedback-option-btn\"\n            key={option}\n            onClick={() => onLeaveFeedback(option)}\n          >{option}</button>\n        ))}\n    </div>\n);\n\nFeedbackOptions.protoTypes = {\n  option: PropTypes.string.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <ul>\n    <li>Good: {good}</li>\n    <li>Neutral: {neutral}</li>\n    <li>Bad: {bad}</li>\n    <li>Total: {total}</li>\n    <li>Positive feedback: {positivePercentage}</li>\n  </ul>\n);\n\nStatistics.protoType = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.func.isRequired,\n  positivePercentage: PropTypes.string.isRequired,\n};\n\nexport default Statistics;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => (\n  <>\n  <h2>{title}</h2>\n      {children}\n  </>\n);\n\nSection.protoTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => (\n  <p>{message}</p>\n);\n\nNotification.protoType = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;","import React from 'react';\nimport './Container.scss';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;","import React, { Component } from \"react\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Statistics from \"./components/Statistics\";\nimport Section from \"./components/Section\";\nimport Notification from \"./components/Notification\";\nimport Container from './components/Container';\nimport './App.scss';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  };\n  \n  handleFeedback = label => {\n    this.setState(prevState => ({\n      [label]: prevState[label] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  }\n\n  countPositiveFeedbackPercentage = () => {\n    const totalFeedback = this.countTotalFeedback();\n    return Math.round(this.state.good/totalFeedback * 100);\n  }\n\n  render() {\n    const options = Object.keys(this.state);\n    const goodFeedback = this.state.good;\n    const neutralFeedback = this.state.neutral;\n    const badFeedback = this.state.bad;\n    const totalFeedback = this.countTotalFeedback();\n    const positiveFeedbackPercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.handleFeedback} />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {totalFeedback >= 1 ?\n            <Statistics\n              good={goodFeedback}\n              neutral={neutralFeedback}\n              bad={badFeedback}\n              total={totalFeedback}\n              positivePercentage={goodFeedback === 0 ? '0%' : `${positiveFeedbackPercentage}%`} />\n            :\n            <Notification message=\"No feedback given\" />}\n        </Section>\n      </Container>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}